name: Build API

on:
  push:
    # Publish `main` as Docker `latest` image. 
    branches:
      - "fake"
    paths:
      - "src/apps/zapisywarka-api/**"
      - "src/libs/api/**"
      - ".github/workflows**"
      

jobs:

  build-app:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Setup .NET Core SDK 5.0.x
          uses: actions/setup-dotnet@v1.7.2
          with:
            dotnet-version: 5.0.x

        - uses: actions/cache@v2
          with:
             path: src/Zapisywarka.API/~/.nuget/packages
             # Look to see if there is a cache hit for the corresponding requirements file
             key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
             restore-keys: |
               ${{ runner.os }}-nuget

        - name: Install dependencies
          working-directory: src/Zapisywarka.API
          run: ls -R && dotnet restore HOST/Zapisywarka.API.Host/Zapisywarka.API.Host.csproj
          

        - name: Build
          run: dotnet build HOST/Zapisywarka.API.Host/Zapisywarka.API.Host.csproj --configuration Release --no-restore -o ./build
          working-directory: src/Zapisywarka.API

        - name: Save build artifacts
          uses: actions/upload-artifact@v2
          with:
           name: dotnet-build-assemblies
           path: src/Zapisywarka.API/build/
  
  
  build-image:
      runs-on: ubuntu-latest
      
      needs: build-app
          
      steps:
        - uses: actions/checkout@v2

        - name: Load build artifacts
          uses: actions/download-artifact@v2
          with:
           name: dotnet-build-assemblies
           path: src/Zapisywarka.API/build
                   
        - name: Debug
          working-directory: src/Zapisywarka.API
          run: ls -R
                     
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
          with: 
            driver: docker
            
        - name: Docker Login
            # You may pin to the exact commit or the version.
            # uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
          uses: docker/login-action@v1.8.0
          with:
              # Server address of Docker registry. If not set then will default to Docker Hub
            registry: ghcr.io
              # Username used to log against the Docker registry
            username: ${{ github.repository_owner }}
            # Password or personal access token used to log against the Docker registry
            password: ${{ secrets.GITHUB_TOKEN }}
              # Log out from the Docker registry at the end of a job
        
      
        - name: Build and push Docker images
          # You may pin to the exact commit or the version.
          # uses: docker/build-push-action@9379083e426e2e84abb80c8c091f5cdeb7d3fd7a
          uses: docker/build-push-action@v2.3.0
          with:
            # Build's context is the set of files located in the specified PATH or URL
            context: .
            # Path to the Dockerfile
            file: ./src/Zapisywarka.API/Dockerfile
            push: true
            # List of tags
            tags: |
              ghcr.io/msz13/zapisywarka_api:0.3 
            # List of metadata for an image
            # labels: latest
            
        - name: Result
          run: echo ${{ steps.docker_build.outputs.digest }}


defaults:
  run:
    working-directory: src

jobs: 

  build-web:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:         
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 14.18.1
          cache: 'npm'
      - name: Setup .NET Core SDK 5.0.x
        uses: actions/setup-dotnet@v1.7.2
        with:
            dotnet-version: 6.0.x              
      - name: lint
        run:  npx nx affected --head=main --base=HEAD~1 --target=lint --parell=2
      - name: test
        run:  npx nx run-many --all --target=test --exclude=-api-catalog-catalog,-api-catalog-catalog-test,api-catalog-catalog-api,api-common-infrastructure,api-common-infrastructure-test, api-identity-identity-api, api-identity-identity-core, api-identity-identity-core-test, db-migrations, zapisywarka-api, zapisywarka-api-test --parell=3
      - name: build
        run:  npx nx run zapisywarka-rejestracja:build -c production
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        run:  echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin              
      - name: Build image
        run: npx nx run zapisywarka-rejestracja:docker -c production --tags=ghcr.io/msz13/zapisywarka-rejestracja:${{ github.sha }}
       
      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-build-assemblies
          path: src/Zapisywarka.API/build/