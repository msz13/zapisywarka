apiVersion: v1
data:
  config.json: "{ \n    \"apiUrl\": \"http://api.zapisywarka.local\"\n}\n    \n"
kind: ConfigMap
metadata:
  labels:
    app: rejestracja
    env: staging
  name: dev-zapisywarka-web-configuration-2bdgfm8266
---
apiVersion: v1
data:
  .dockerconfigjson: |
    ewogICAgImF1dGhzIjoKICAgIHsKICAgICAgICAiZ2hjci5pbyI6CiAgICAgICAgICAgIH
    sKICAgICAgICAgICAgICAgICJhdXRoIjoiYlhONk1UTTZaMmh3WDJFeGFVOTFVSEphVjI5
    T2JYQkZUVU5SVUdkYU5tRlhRMVoyVFhJMWFESmFOa3BNYkFvPSIKICAgICAgICAgICAgfQ
    ogICAgfQp9Cg==
kind: Secret
metadata:
  labels:
    app: rejestracja
    env: staging
  name: regcred-tthtfh769g
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rejestracja
    env: staging
  name: dev-zapisywarka-web
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: rejestracja
    env: staging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rejestracja
    env: staging
  name: dev-zapisywarka-web
spec:
  selector:
    matchLabels:
      app: rejestracja
      env: staging
  template:
    metadata:
      labels:
        app: rejestracja
        env: staging
    spec:
      containers:
      - image: zapisywarka-rejestracja:4acdd0fb2747
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html/assets/
          name: config-volume
      imagePullSecrets:
      - name: regcred-tthtfh769g
      volumes:
      - configMap:
          name: dev-zapisywarka-web-configuration-2bdgfm8266
        name: config-volume
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: rejestracja
    env: staging
  name: dev-zapisywarka-web
spec:
  rules:
  - host: test.zapisywarka.pl
    http:
      paths:
      - backend:
          service:
            name: dev-zapisywarka-web
            port:
              number: 80
        path: /
        pathType: Prefix
